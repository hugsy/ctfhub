version: '3'

services:

  postgres:
    image: postgres:alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${CTFHUB_DB_NAME}
      - POSTGRES_USER=${CTFHUB_DB_USER}
      - POSTGRES_PASSWORD=${CTFHUB_DB_PASSWORD}
    volumes:
      - postgres-vol:/var/lib/postgresql/data
    networks:
      - ctfhub
    restart: always

  hedgedoc:
    image: quay.io/hedgedoc/hedgedoc:alpine
    links:
      - "postgres:db"
    env_file:
      - .env
    environment:
      - CMD_DB_URL=postgres://${CTFHUB_DB_USER}:${CTFHUB_DB_PASSWORD}@${CTFHUB_DB_HOST}:${CTFHUB_DB_PORT}/${CTFHUB_DB_NAME}
      - CMD_ALLOW_ANONYMOUS=false
      - CMD_ALLOW_FREEURL=true
      - CMD_IMAGE_UPLOAD_TYPE=filesystem
      - CMD_DOMAIN=${CTFHUB_HEDGEDOC_DOMAIN}
      - CMD_PORT=${CTFHUB_HEDGEDOC_PORT}
      - CMD_URL_ADDPORT=true
      - CMD_PROTOCOL_USESSL=false
    networks:
      - ctfhub
    ports:
      - 3000:3000
    restart: always
    depends_on:
      - postgres
    volumes:
      - type: volume
        source: hedgedoc-vol
        target: /hedgedoc/public/uploads
        read_only: false

  ctfhub:
    # build: https://github.com/hugsy/ctfhub.git#master
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    links:
      - "postgres:db"
    env_file:
      - .env
      # - .env.proxy # Uncomment if using a proxy
    depends_on:
      - postgres
      - hedgedoc
    ports:
      - 8000:8000
    networks:
      - ctfhub
    restart: always
    volumes:
      - type: volume
        source: ctfhub-vol
        target: /code/uploads
        read_only: false

      - type: bind
        source: ./
        target: /code
        read_only: true

networks:
  ctfhub:
    driver: bridge

volumes:
  postgres-vol:
  hedgedoc-vol:
  ctfhub-vol:
